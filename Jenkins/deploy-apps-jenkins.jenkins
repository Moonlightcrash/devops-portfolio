#!groovy
properties([disableConcurrentBuilds()])

pipeline {
    agent any
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    environment {
        REPOSITORY_URL = 'git@gitlab.idb.local:metrika/deploy/apps.git'
        REPOSITORY_BRANCH = '*/master'
        ANSIBLE_HOST = '10.10.14.45'
        ANSIBLE_USER = 'root'
        ANSIBLE_PATH = '/etc/ansible/metrika/apps'
    }
    stages {
        stage('Checkout external proj') {
            steps {
                checkout([
                    $class: 'GitSCM', 
                    branches: [[name: REPOSITORY_BRANCH]],
                    doGenerateSubmoduleConfigurations: false, 
                    extensions: [],
                    submoduleCfg: [], 
                    userRemoteConfigs:
                    [[credentialsId: 'gitlab-ssh-key',
                    url: REPOSITORY_URL]]])
                sh 'git submodule sync'
                sh 'git submodule init'
                sh 'git submodule update --remote'
            }
        }
        stage('Check directory') {
            steps {
                sh """ ssh ${ANSIBLE_USER}@${ANSIBLE_HOST} "if ! [ -d ${ANSIBLE_PATH} ];  then mkdir ${ANSIBLE_PATH}; fi" """
                sh """ ssh ${ANSIBLE_USER}@${ANSIBLE_HOST} 'rm -rf ${ANSIBLE_PATH}/* ' """
            }
        }
        stage('Copy files') {
            steps {
                sh """ scp -r * ${ANSIBLE_USER}@${ANSIBLE_HOST}:${ANSIBLE_PATH}"""
            }
        }
    }
}
